-- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0756
--   at:        2018-09-17 19:02:19 MSK
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE author (
    id           INTEGER NOT NULL,
    fio          VARCHAR2(30 CHAR) NOT NULL,
    birth_date   DATE NOT NULL
);

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( id );

CREATE TABLE book (
    id                    INTEGER NOT NULL,
    name                  VARCHAR2(15 CHAR) NOT NULL,
    publishing_house_id   INTEGER NOT NULL,
    author_id             INTEGER NOT NULL
);

ALTER TABLE book ADD CONSTRAINT book_pk PRIMARY KEY ( id );

CREATE TABLE invoice (
    id                      INTEGER NOT NULL,
    "date"                  DATE NOT NULL,
    operation_description   VARCHAR2(20 CHAR) NOT NULL,
    buying_price            NUMBER NOT NULL,
    selling_price           NUMBER NOT NULL
);

ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( id );

CREATE TABLE other (
    id   INTEGER NOT NULL
);

ALTER TABLE other ADD CONSTRAINT other_pk PRIMARY KEY ( id );

CREATE TABLE owner (
    id        INTEGER NOT NULL,
    address   VARCHAR2(25 CHAR) NOT NULL
);

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( id );

CREATE TABLE publishing_house (
    id        INTEGER NOT NULL,
    name      VARCHAR2(15 CHAR) NOT NULL,
    address   VARCHAR2(25 CHAR) NOT NULL
);

ALTER TABLE publishing_house ADD CONSTRAINT publishing_house_pk PRIMARY KEY ( id );

CREATE TABLE relation_4 (
    invoice_id   INTEGER NOT NULL,
    book_id      INTEGER NOT NULL,
    amount       INTEGER NOT NULL
);

ALTER TABLE relation_4 ADD CONSTRAINT relation_4_pk PRIMARY KEY ( invoice_id,
                                                                  book_id );

CREATE TABLE relation_6 (
    owner_id     INTEGER NOT NULL,
    invoice_id   INTEGER NOT NULL
);

ALTER TABLE relation_6 ADD CONSTRAINT relation_6_pk PRIMARY KEY ( owner_id,
                                                                  invoice_id );

CREATE TABLE relation_8 (
    owner_id   INTEGER NOT NULL,
    book_id    INTEGER NOT NULL,
    amount     INTEGER NOT NULL
);

ALTER TABLE relation_8 ADD CONSTRAINT relation_8_pk PRIMARY KEY ( owner_id,
                                                                  book_id );

CREATE TABLE seller (
    id               INTEGER NOT NULL,
    fio              VARCHAR2(30 CHAR) NOT NULL,
    seller_percent   NUMBER NOT NULL
);

ALTER TABLE seller ADD CONSTRAINT seller_pk PRIMARY KEY ( id );

CREATE TABLE stock (
    id             INTEGER NOT NULL,
    director_fio   VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE stock ADD CONSTRAINT stock_pk PRIMARY KEY ( id );

ALTER TABLE book
    ADD CONSTRAINT book_author_fk FOREIGN KEY ( author_id )
        REFERENCES author ( id );

ALTER TABLE book
    ADD CONSTRAINT book_publishing_house_fk FOREIGN KEY ( publishing_house_id )
        REFERENCES publishing_house ( id );

ALTER TABLE other
    ADD CONSTRAINT other_owner_fk FOREIGN KEY ( id )
        REFERENCES owner ( id );

ALTER TABLE relation_4
    ADD CONSTRAINT relation_4_book_fk FOREIGN KEY ( book_id )
        REFERENCES book ( id );

ALTER TABLE relation_4
    ADD CONSTRAINT relation_4_invoice_fk FOREIGN KEY ( invoice_id )
        REFERENCES invoice ( id );

ALTER TABLE relation_6
    ADD CONSTRAINT relation_6_invoice_fk FOREIGN KEY ( invoice_id )
        REFERENCES invoice ( id );

ALTER TABLE relation_6
    ADD CONSTRAINT relation_6_owner_fk FOREIGN KEY ( owner_id )
        REFERENCES owner ( id );

ALTER TABLE relation_8
    ADD CONSTRAINT relation_8_book_fk FOREIGN KEY ( book_id )
        REFERENCES book ( id );

ALTER TABLE relation_8
    ADD CONSTRAINT relation_8_owner_fk FOREIGN KEY ( owner_id )
        REFERENCES owner ( id );

ALTER TABLE seller
    ADD CONSTRAINT seller_owner_fk FOREIGN KEY ( id )
        REFERENCES owner ( id );

ALTER TABLE stock
    ADD CONSTRAINT stock_owner_fk FOREIGN KEY ( id )
        REFERENCES owner ( id );

CREATE OR REPLACE TRIGGER fkntm_book BEFORE
    UPDATE OF publishing_house_id,author_id ON book
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table BOOK is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_relation_4 BEFORE
    UPDATE OF invoice_id,book_id ON relation_4
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table Relation_4 is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_relation_6 BEFORE
    UPDATE OF owner_id,invoice_id ON relation_6
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table Relation_6 is violated');
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_stock BEFORE
    INSERT OR UPDATE OF id ON stock
    FOR EACH ROW
DECLARE
    d   INTEGER;
BEGIN
    SELECT
        a.id
    INTO d
    FROM
        owner a
    WHERE
        a.id =:new.id;

    IF ( d IS NULL OR d <> id ) THEN
        raise_application_error(-20223,'FK STOCK_OWNER_FK in Table STOCK violates Arc constraint on Table OWNER - discriminator column id doesn''t have value id'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_other BEFORE
    INSERT OR UPDATE OF id ON other
    FOR EACH ROW
DECLARE
    d   INTEGER;
BEGIN
    SELECT
        a.id
    INTO d
    FROM
        owner a
    WHERE
        a.id =:new.id;

    IF ( d IS NULL OR d <> id ) THEN
        raise_application_error(-20223,'FK OTHER_OWNER_FK in Table OTHER violates Arc constraint on Table OWNER - discriminator column id doesn''t have value id'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_seller BEFORE
    INSERT OR UPDATE OF id ON seller
    FOR EACH ROW
DECLARE
    d   INTEGER;
BEGIN
    SELECT
        a.id
    INTO d
    FROM
        owner a
    WHERE
        a.id =:new.id;

    IF ( d IS NULL OR d <> id ) THEN
        raise_application_error(-20223,'FK SELLER_OWNER_FK in Table SELLER violates Arc constraint on Table OWNER - discriminator column id doesn''t have value id'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             22
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
